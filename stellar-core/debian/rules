#!/usr/bin/make -f
# See debhelper(7) (uncomment to enable)
# output every command that modifies files on the build system.
export DH_VERBOSE = 1

# dpkg-buildflags
DPKG_EXPORT_BUILDFLAGS = 1
include /usr/share/dpkg/buildflags.mk

# see FEATURE AREAS in dpkg-buildflags(1)
#export DEB_BUILD_MAINT_OPTIONS = hardening=+all

# package maintainers to prepend CXXFLAGS
export DEB_CXXFLAGS_MAINT_PREPEND  = -stdlib=libc++ -std=c++17 -fno-omit-frame-pointer -isystem /usr/include/libcxxabi

# set DEB_CONFIGURE_OPTS in your environment to override
DEB_CONFIGURE_OPTS ?= --prefix=/usr --includedir=/usr/include --mandir=/usr/share/man --infodir=/usr/share/info --sysconfdir=/etc --localstatedir=/var

# set DEB_CONFIGURE_OPTS_APPEND in your environment to append options

# add the directory rust is installed into to PATH and override HOME
export HOME := $(CURDIR)/rusthome
export PATH := $(HOME)/.cargo/bin:$(PATH)

# export CC and CXX so they are picked up by the rust cc library
export CC := clang-19
export CXX := clang++-19

%:
	dh $@ --with autoreconf --with systemd --parallel
override_dh_autoreconf:
	./autogen.sh --skip-submodules # This skips the autogen.sh `git submodule update --init`


# dh_make generated override targets
# This is example for Cmake (See https://bugs.debian.org/641051 )
override_dh_auto_configure:
	mkdir -p $(HOME)
	./install-rust.sh
	./configure $(DEB_CONFIGURE_OPTS) $(DEB_CONFIGURE_OPTS_APPEND)

override_dh_systemd_start:
	dh_systemd_start --restart-after-upgrade

override_dh_auto_install:
	dh_auto_install --destdir=debian/stellar-core

override_dh_strip:
	dh_strip --dbg-package=stellar-core-dbg

# Disable tests at build time
override_dh_auto_test:
